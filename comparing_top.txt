-- Finding the top 100 units of 2023 Q1 and Q2
WITH Best_Sellers_2023 AS (
    SELECT 
        sku, 
        SUM(profit_after_returns::numeric) AS total_profit_after_returns_2023,
        SUM(total_ordered_items::numeric) AS total_ordered_items_2023,
        SUM(return_items::numeric) AS return_items_2023
    FROM 
        aggregate_profit_data
    WHERE 
        year = '2023' AND quarter IN ('1', '2')
    GROUP BY 
        sku
    ORDER BY 
        total_ordered_items_2023 DESC
    LIMIT 100
),
-- Finding the performance of 2023 best sellers in 2024 Q1 and Q2
Performance_2023_in_2024 AS (
    SELECT 
        s.sku, 
        SUM(s.profit_after_returns::numeric) AS total_profit_after_returns_2024,
        SUM(s.total_ordered_items::numeric) AS total_ordered_items_2024,
        SUM(s.return_items::numeric) AS return_items_2024
    FROM 
        aggregate_profit_data s
    WHERE 
        s.year = '2024' AND s.quarter IN ('1', '2') 
        AND s.sku IN (SELECT sku FROM Best_Sellers_2023)
    GROUP BY 
        s.sku
),
-- Finding the top 100 units of 2024 Q1 and Q2
Best_Sellers_2024 AS (
    SELECT 
        sku, 
        SUM(profit_after_returns::numeric) AS total_profit_after_returns_2024,
        SUM(total_ordered_items::numeric) AS total_ordered_items_2024,
        SUM(return_items::numeric) AS return_items_2024
    FROM 
        aggregate_profit_data
    WHERE 
        year = '2024' AND quarter IN ('1', '2')
    GROUP BY 
        sku
    ORDER BY 
        total_ordered_items_2024 DESC
    LIMIT 100
),
-- Finding the performance of 2024 best sellers in 2023 Q1 and Q2
Performance_2024_in_2023 AS (
    SELECT 
        s.sku, 
        SUM(s.profit_after_returns::numeric) AS total_profit_after_returns_2023,
        SUM(s.total_ordered_items::numeric) AS total_ordered_items_2023,
        SUM(s.return_items::numeric) AS return_items_2023
    FROM 
        aggregate_profit_data s
    WHERE 
        s.year = '2023' AND s.quarter IN ('1', '2') 
        AND s.sku IN (SELECT sku FROM Best_Sellers_2024)
    GROUP BY 
        s.sku
)
-- Combining the results using LEFT JOIN and RIGHT JOIN to avoid duplication
SELECT 
    COALESCE(bs23.sku, bs24.sku) AS sku,
    COALESCE(bs23.total_profit_after_returns_2023, 0) AS total_profit_after_returns_2023,
    COALESCE(bs23.total_ordered_items_2023, 0) AS total_ordered_items_2023,
    COALESCE(bs23.return_items_2023, 0) AS return_items_2023,
    COALESCE(p23_24.total_profit_after_returns_2024, bs24.total_profit_after_returns_2024, 0) AS total_profit_after_returns_2024,
    COALESCE(p23_24.total_ordered_items_2024, bs24.total_ordered_items_2024, 0) AS total_ordered_items_2024,
    COALESCE(p23_24.return_items_2024, bs24.return_items_2024, 0) AS return_items_2024
FROM 
    Best_Sellers_2023 bs23
LEFT JOIN 
    Performance_2023_in_2024 p23_24 ON bs23.sku = p23_24.sku
LEFT JOIN 
    Best_Sellers_2024 bs24 ON bs23.sku = bs24.sku
LEFT JOIN 
    Performance_2024_in_2023 p24_23 ON bs24.sku = p24_23.sku
WHERE 
    bs23.sku IS NOT NULL OR bs24.sku IS NOT NULL
ORDER BY 
    sku;
